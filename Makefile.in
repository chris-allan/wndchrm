# Makefile.in generated by automake 1.6.3 from Makefile.am.
# @configure_input@

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@
SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = .

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_HEADER = $(INSTALL_DATA)
transform = @program_transform_name@
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :

EXEEXT = @EXEEXT@
OBJEXT = @OBJEXT@
PATH_SEPARATOR = @PATH_SEPARATOR@
AMTAR = @AMTAR@
AWK = @AWK@
CC = @CC@
CXX = @CXX@
DEPDIR = @DEPDIR@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
PACKAGE = @PACKAGE@
RANLIB = @RANLIB@
STRIP = @STRIP@
VERSION = @VERSION@
am__include = @am__include@
am__quote = @am__quote@
install_sh = @install_sh@
noinst_LIBRARIES = libimfit.a

libimfit_a_SOURCES = \
	cmatrix.cpp \
	cmatrix.h \
	colors/FuzzyCalc.cpp \
	colors/FuzzyCalc.h \
	signatures.cpp \
	signatures.h \
	statistics/CombFirst4Moments.cpp \
	statistics/CombFirst4Moments.h \
	statistics/FeatureStatistics.cpp \
	statistics/FeatureStatistics.h \
	textures/gabor.cpp \
	textures/gabor.h \
	textures/haarlick/CVIPtexture.cpp \
	textures/haarlick/CVIPtexture.h \
	textures/haarlick/haarlick.cpp \
	textures/haarlick/haarlick.h \
	textures/haarlick/mapkit.cpp \
	textures/haarlick/mapkit.h \
	textures/haarlick/mapkit_generic.cpp \
	textures/haarlick/mapkit_generic.h \
	textures/tamura.cpp \
	textures/tamura.h \
	textures/zernike/complex.cpp \
	textures/zernike/complex.h \
	textures/zernike/zernike.cpp \
	textures/zernike/zernike.h \
	TrainingSet.cpp \
	TrainingSet.h \
	transforms/ChebishevFourier.cpp \
	transforms/ChebishevFourier.h \
	transforms/chevishev.cpp \
	transforms/chevishev.h \
	transforms/fft/bcb_fftw3/fftw3.h \
	transforms/fft/fftw3.h \
	transforms/radon.cpp \
	transforms/radon.h \
	transforms/wavelet/Common.cpp \
	transforms/wavelet/Common.h \
	transforms/wavelet/convolution.cpp \
	transforms/wavelet/convolution.h \
	transforms/wavelet/DataGrid.h \
	transforms/wavelet/DataGrid2D.cpp \
	transforms/wavelet/DataGrid2D.h \
    transforms/wavelet/DataGrid3D.cpp \
	transforms/wavelet/DataGrid3D.h \
	transforms/wavelet/Filter.cpp \
	transforms/wavelet/Filter.h \
	transforms/wavelet/FilterSet.cpp \
	transforms/wavelet/FilterSet.h \
	transforms/wavelet/Symlet5.cpp \
	transforms/wavelet/Symlet5.h \
	transforms/wavelet/Wavelet.cpp \
	transforms/wavelet/Wavelet.h \
	transforms/wavelet/WaveletHigh.cpp \
	transforms/wavelet/WaveletHigh.h \
	transforms/wavelet/WaveletLow.cpp \
	transforms/wavelet/WaveletLow.h \
	transforms/wavelet/WaveletMedium.cpp \
	transforms/wavelet/WaveletMedium.h \
	transforms/wavelet/wt.cpp \
	transforms/wavelet/wt.h


AM_CPPFLAGS = -fPIC

bin_PROGRAMS = wndchrm

wndchrm_SOURCES = wndchrm.cpp

wndchrm_LDADD = -lm -ltiff -L. -limfit -lfftw3
subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES =
LIBRARIES = $(noinst_LIBRARIES)

libimfit_a_AR = $(AR) cru
libimfit_a_LIBADD =
am_libimfit_a_OBJECTS = cmatrix.$(OBJEXT) FuzzyCalc.$(OBJEXT) \
	signatures.$(OBJEXT) CombFirst4Moments.$(OBJEXT) \
	FeatureStatistics.$(OBJEXT) gabor.$(OBJEXT) \
	CVIPtexture.$(OBJEXT) haarlick.$(OBJEXT) mapkit.$(OBJEXT) \
	mapkit_generic.$(OBJEXT) tamura.$(OBJEXT) complex.$(OBJEXT) \
	zernike.$(OBJEXT) TrainingSet.$(OBJEXT) \
	ChebishevFourier.$(OBJEXT) chevishev.$(OBJEXT) radon.$(OBJEXT) \
	Common.$(OBJEXT) convolution.$(OBJEXT) DataGrid2D.$(OBJEXT) \
	DataGrid3D.$(OBJEXT) Filter.$(OBJEXT) FilterSet.$(OBJEXT) \
	Symlet5.$(OBJEXT) Wavelet.$(OBJEXT) WaveletHigh.$(OBJEXT) \
	WaveletLow.$(OBJEXT) WaveletMedium.$(OBJEXT) wt.$(OBJEXT)
libimfit_a_OBJECTS = $(am_libimfit_a_OBJECTS)
bin_PROGRAMS = wndchrm$(EXEEXT)
PROGRAMS = $(bin_PROGRAMS)

am_wndchrm_OBJECTS = wndchrm.$(OBJEXT)
wndchrm_OBJECTS = $(am_wndchrm_OBJECTS)
wndchrm_DEPENDENCIES =
wndchrm_LDFLAGS =

DEFS = @DEFS@
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I.
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
@AMDEP_TRUE@DEP_FILES = ./$(DEPDIR)/CVIPtexture.Po \
@AMDEP_TRUE@	./$(DEPDIR)/ChebishevFourier.Po \
@AMDEP_TRUE@	./$(DEPDIR)/CombFirst4Moments.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Common.Po ./$(DEPDIR)/DataGrid2D.Po \
@AMDEP_TRUE@	./$(DEPDIR)/DataGrid3D.Po \
@AMDEP_TRUE@	./$(DEPDIR)/FeatureStatistics.Po \
@AMDEP_TRUE@	./$(DEPDIR)/Filter.Po ./$(DEPDIR)/FilterSet.Po \
@AMDEP_TRUE@	./$(DEPDIR)/FuzzyCalc.Po ./$(DEPDIR)/Symlet5.Po \
@AMDEP_TRUE@	./$(DEPDIR)/TrainingSet.Po ./$(DEPDIR)/Wavelet.Po \
@AMDEP_TRUE@	./$(DEPDIR)/WaveletHigh.Po \
@AMDEP_TRUE@	./$(DEPDIR)/WaveletLow.Po \
@AMDEP_TRUE@	./$(DEPDIR)/WaveletMedium.Po \
@AMDEP_TRUE@	./$(DEPDIR)/chevishev.Po ./$(DEPDIR)/cmatrix.Po \
@AMDEP_TRUE@	./$(DEPDIR)/complex.Po ./$(DEPDIR)/convolution.Po \
@AMDEP_TRUE@	./$(DEPDIR)/gabor.Po ./$(DEPDIR)/haarlick.Po \
@AMDEP_TRUE@	./$(DEPDIR)/mapkit.Po ./$(DEPDIR)/mapkit_generic.Po \
@AMDEP_TRUE@	./$(DEPDIR)/radon.Po ./$(DEPDIR)/signatures.Po \
@AMDEP_TRUE@	./$(DEPDIR)/tamura.Po ./$(DEPDIR)/wndchrm.Po \
@AMDEP_TRUE@	./$(DEPDIR)/wt.Po ./$(DEPDIR)/zernike.Po
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
CXXFLAGS = @CXXFLAGS@
CFLAGS = @CFLAGS@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(libimfit_a_SOURCES) $(wndchrm_SOURCES)
DIST_COMMON = README AUTHORS COPYING ChangeLog INSTALL Makefile.am \
	Makefile.in NEWS aclocal.m4 config.h.in configure configure.ac \
	depcomp install-sh missing mkinstalldirs
SOURCES = $(libimfit_a_SOURCES) $(wndchrm_SOURCES)

all: config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj

am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)

$(top_builddir)/config.status: $(srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck
$(srcdir)/configure:  $(srcdir)/configure.ac $(ACLOCAL_M4) $(CONFIGURE_DEPENDENCIES)
	cd $(srcdir) && $(AUTOCONF)

$(ACLOCAL_M4):  configure.ac 
	cd $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)

config.h: stamp-h1
	@if test ! -f $@; then \
	  rm -f stamp-h1; \
	  $(MAKE) stamp-h1; \
	else :; fi

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status config.h

$(srcdir)/config.h.in:  $(top_srcdir)/configure.ac $(ACLOCAL_M4) 
	cd $(top_srcdir) && $(AUTOHEADER)
	touch $(srcdir)/config.h.in

distclean-hdr:
	-rm -f config.h stamp-h1

AR = ar

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
FuzzyCalc.$(OBJEXT): colors/FuzzyCalc.cpp
CombFirst4Moments.$(OBJEXT): statistics/CombFirst4Moments.cpp
FeatureStatistics.$(OBJEXT): statistics/FeatureStatistics.cpp
gabor.$(OBJEXT): textures/gabor.cpp
CVIPtexture.$(OBJEXT): textures/haarlick/CVIPtexture.cpp
haarlick.$(OBJEXT): textures/haarlick/haarlick.cpp
mapkit.$(OBJEXT): textures/haarlick/mapkit.cpp
mapkit_generic.$(OBJEXT): textures/haarlick/mapkit_generic.cpp
tamura.$(OBJEXT): textures/tamura.cpp
complex.$(OBJEXT): textures/zernike/complex.cpp
zernike.$(OBJEXT): textures/zernike/zernike.cpp
ChebishevFourier.$(OBJEXT): transforms/ChebishevFourier.cpp
chevishev.$(OBJEXT): transforms/chevishev.cpp
radon.$(OBJEXT): transforms/radon.cpp
Common.$(OBJEXT): transforms/wavelet/Common.cpp
convolution.$(OBJEXT): transforms/wavelet/convolution.cpp
DataGrid2D.$(OBJEXT): transforms/wavelet/DataGrid2D.cpp
DataGrid3D.$(OBJEXT): transforms/wavelet/DataGrid3D.cpp
Filter.$(OBJEXT): transforms/wavelet/Filter.cpp
FilterSet.$(OBJEXT): transforms/wavelet/FilterSet.cpp
Symlet5.$(OBJEXT): transforms/wavelet/Symlet5.cpp
Wavelet.$(OBJEXT): transforms/wavelet/Wavelet.cpp
WaveletHigh.$(OBJEXT): transforms/wavelet/WaveletHigh.cpp
WaveletLow.$(OBJEXT): transforms/wavelet/WaveletLow.cpp
WaveletMedium.$(OBJEXT): transforms/wavelet/WaveletMedium.cpp
wt.$(OBJEXT): transforms/wavelet/wt.cpp
libimfit.a: $(libimfit_a_OBJECTS) $(libimfit_a_DEPENDENCIES) 
	-rm -f libimfit.a
	$(libimfit_a_AR) libimfit.a $(libimfit_a_OBJECTS) $(libimfit_a_LIBADD)
	$(RANLIB) libimfit.a
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	$(mkinstalldirs) $(DESTDIR)$(bindir)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f"; \
	   $(INSTALL_PROGRAM_ENV) $(binPROGRAMS_INSTALL) $$p $(DESTDIR)$(bindir)/$$f; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f $(DESTDIR)$(bindir)/$$f"; \
	  rm -f $(DESTDIR)$(bindir)/$$f; \
	done

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
wndchrm$(EXEEXT): $(wndchrm_OBJECTS) $(wndchrm_DEPENDENCIES) 
	@rm -f wndchrm$(EXEEXT)
	$(CXXLINK) $(wndchrm_LDFLAGS) $(wndchrm_OBJECTS) $(wndchrm_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CVIPtexture.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/ChebishevFourier.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/CombFirst4Moments.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Common.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DataGrid2D.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/DataGrid3D.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FeatureStatistics.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Filter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FilterSet.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/FuzzyCalc.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Symlet5.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/TrainingSet.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/Wavelet.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/WaveletHigh.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/WaveletLow.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/WaveletMedium.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/chevishev.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/cmatrix.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/complex.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/convolution.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/gabor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/haarlick.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mapkit.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/mapkit_generic.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/radon.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/signatures.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tamura.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wndchrm.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/wt.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zernike.Po@am__quote@

distclean-depend:
	-rm -rf ./$(DEPDIR)

.cpp.o:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXXCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<

.cpp.obj:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXXCOMPILE) -c -o $@ `cygpath -w $<`

FuzzyCalc.o: colors/FuzzyCalc.cpp
@AMDEP_TRUE@	source='colors/FuzzyCalc.cpp' object='FuzzyCalc.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/FuzzyCalc.Po' tmpdepfile='$(DEPDIR)/FuzzyCalc.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o FuzzyCalc.o `test -f 'colors/FuzzyCalc.cpp' || echo '$(srcdir)/'`colors/FuzzyCalc.cpp

FuzzyCalc.obj: colors/FuzzyCalc.cpp
@AMDEP_TRUE@	source='colors/FuzzyCalc.cpp' object='FuzzyCalc.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/FuzzyCalc.Po' tmpdepfile='$(DEPDIR)/FuzzyCalc.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o FuzzyCalc.obj `cygpath -w colors/FuzzyCalc.cpp`

CombFirst4Moments.o: statistics/CombFirst4Moments.cpp
@AMDEP_TRUE@	source='statistics/CombFirst4Moments.cpp' object='CombFirst4Moments.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/CombFirst4Moments.Po' tmpdepfile='$(DEPDIR)/CombFirst4Moments.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CombFirst4Moments.o `test -f 'statistics/CombFirst4Moments.cpp' || echo '$(srcdir)/'`statistics/CombFirst4Moments.cpp

CombFirst4Moments.obj: statistics/CombFirst4Moments.cpp
@AMDEP_TRUE@	source='statistics/CombFirst4Moments.cpp' object='CombFirst4Moments.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/CombFirst4Moments.Po' tmpdepfile='$(DEPDIR)/CombFirst4Moments.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CombFirst4Moments.obj `cygpath -w statistics/CombFirst4Moments.cpp`

FeatureStatistics.o: statistics/FeatureStatistics.cpp
@AMDEP_TRUE@	source='statistics/FeatureStatistics.cpp' object='FeatureStatistics.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/FeatureStatistics.Po' tmpdepfile='$(DEPDIR)/FeatureStatistics.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o FeatureStatistics.o `test -f 'statistics/FeatureStatistics.cpp' || echo '$(srcdir)/'`statistics/FeatureStatistics.cpp

FeatureStatistics.obj: statistics/FeatureStatistics.cpp
@AMDEP_TRUE@	source='statistics/FeatureStatistics.cpp' object='FeatureStatistics.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/FeatureStatistics.Po' tmpdepfile='$(DEPDIR)/FeatureStatistics.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o FeatureStatistics.obj `cygpath -w statistics/FeatureStatistics.cpp`

gabor.o: textures/gabor.cpp
@AMDEP_TRUE@	source='textures/gabor.cpp' object='gabor.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/gabor.Po' tmpdepfile='$(DEPDIR)/gabor.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gabor.o `test -f 'textures/gabor.cpp' || echo '$(srcdir)/'`textures/gabor.cpp

gabor.obj: textures/gabor.cpp
@AMDEP_TRUE@	source='textures/gabor.cpp' object='gabor.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/gabor.Po' tmpdepfile='$(DEPDIR)/gabor.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o gabor.obj `cygpath -w textures/gabor.cpp`

CVIPtexture.o: textures/haarlick/CVIPtexture.cpp
@AMDEP_TRUE@	source='textures/haarlick/CVIPtexture.cpp' object='CVIPtexture.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/CVIPtexture.Po' tmpdepfile='$(DEPDIR)/CVIPtexture.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CVIPtexture.o `test -f 'textures/haarlick/CVIPtexture.cpp' || echo '$(srcdir)/'`textures/haarlick/CVIPtexture.cpp

CVIPtexture.obj: textures/haarlick/CVIPtexture.cpp
@AMDEP_TRUE@	source='textures/haarlick/CVIPtexture.cpp' object='CVIPtexture.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/CVIPtexture.Po' tmpdepfile='$(DEPDIR)/CVIPtexture.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CVIPtexture.obj `cygpath -w textures/haarlick/CVIPtexture.cpp`

haarlick.o: textures/haarlick/haarlick.cpp
@AMDEP_TRUE@	source='textures/haarlick/haarlick.cpp' object='haarlick.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/haarlick.Po' tmpdepfile='$(DEPDIR)/haarlick.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o haarlick.o `test -f 'textures/haarlick/haarlick.cpp' || echo '$(srcdir)/'`textures/haarlick/haarlick.cpp

haarlick.obj: textures/haarlick/haarlick.cpp
@AMDEP_TRUE@	source='textures/haarlick/haarlick.cpp' object='haarlick.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/haarlick.Po' tmpdepfile='$(DEPDIR)/haarlick.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o haarlick.obj `cygpath -w textures/haarlick/haarlick.cpp`

mapkit.o: textures/haarlick/mapkit.cpp
@AMDEP_TRUE@	source='textures/haarlick/mapkit.cpp' object='mapkit.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mapkit.Po' tmpdepfile='$(DEPDIR)/mapkit.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mapkit.o `test -f 'textures/haarlick/mapkit.cpp' || echo '$(srcdir)/'`textures/haarlick/mapkit.cpp

mapkit.obj: textures/haarlick/mapkit.cpp
@AMDEP_TRUE@	source='textures/haarlick/mapkit.cpp' object='mapkit.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mapkit.Po' tmpdepfile='$(DEPDIR)/mapkit.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mapkit.obj `cygpath -w textures/haarlick/mapkit.cpp`

mapkit_generic.o: textures/haarlick/mapkit_generic.cpp
@AMDEP_TRUE@	source='textures/haarlick/mapkit_generic.cpp' object='mapkit_generic.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mapkit_generic.Po' tmpdepfile='$(DEPDIR)/mapkit_generic.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mapkit_generic.o `test -f 'textures/haarlick/mapkit_generic.cpp' || echo '$(srcdir)/'`textures/haarlick/mapkit_generic.cpp

mapkit_generic.obj: textures/haarlick/mapkit_generic.cpp
@AMDEP_TRUE@	source='textures/haarlick/mapkit_generic.cpp' object='mapkit_generic.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/mapkit_generic.Po' tmpdepfile='$(DEPDIR)/mapkit_generic.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o mapkit_generic.obj `cygpath -w textures/haarlick/mapkit_generic.cpp`

tamura.o: textures/tamura.cpp
@AMDEP_TRUE@	source='textures/tamura.cpp' object='tamura.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/tamura.Po' tmpdepfile='$(DEPDIR)/tamura.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tamura.o `test -f 'textures/tamura.cpp' || echo '$(srcdir)/'`textures/tamura.cpp

tamura.obj: textures/tamura.cpp
@AMDEP_TRUE@	source='textures/tamura.cpp' object='tamura.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/tamura.Po' tmpdepfile='$(DEPDIR)/tamura.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o tamura.obj `cygpath -w textures/tamura.cpp`

complex.o: textures/zernike/complex.cpp
@AMDEP_TRUE@	source='textures/zernike/complex.cpp' object='complex.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/complex.Po' tmpdepfile='$(DEPDIR)/complex.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o complex.o `test -f 'textures/zernike/complex.cpp' || echo '$(srcdir)/'`textures/zernike/complex.cpp

complex.obj: textures/zernike/complex.cpp
@AMDEP_TRUE@	source='textures/zernike/complex.cpp' object='complex.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/complex.Po' tmpdepfile='$(DEPDIR)/complex.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o complex.obj `cygpath -w textures/zernike/complex.cpp`

zernike.o: textures/zernike/zernike.cpp
@AMDEP_TRUE@	source='textures/zernike/zernike.cpp' object='zernike.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/zernike.Po' tmpdepfile='$(DEPDIR)/zernike.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zernike.o `test -f 'textures/zernike/zernike.cpp' || echo '$(srcdir)/'`textures/zernike/zernike.cpp

zernike.obj: textures/zernike/zernike.cpp
@AMDEP_TRUE@	source='textures/zernike/zernike.cpp' object='zernike.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/zernike.Po' tmpdepfile='$(DEPDIR)/zernike.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zernike.obj `cygpath -w textures/zernike/zernike.cpp`

ChebishevFourier.o: transforms/ChebishevFourier.cpp
@AMDEP_TRUE@	source='transforms/ChebishevFourier.cpp' object='ChebishevFourier.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ChebishevFourier.Po' tmpdepfile='$(DEPDIR)/ChebishevFourier.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ChebishevFourier.o `test -f 'transforms/ChebishevFourier.cpp' || echo '$(srcdir)/'`transforms/ChebishevFourier.cpp

ChebishevFourier.obj: transforms/ChebishevFourier.cpp
@AMDEP_TRUE@	source='transforms/ChebishevFourier.cpp' object='ChebishevFourier.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/ChebishevFourier.Po' tmpdepfile='$(DEPDIR)/ChebishevFourier.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ChebishevFourier.obj `cygpath -w transforms/ChebishevFourier.cpp`

chevishev.o: transforms/chevishev.cpp
@AMDEP_TRUE@	source='transforms/chevishev.cpp' object='chevishev.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/chevishev.Po' tmpdepfile='$(DEPDIR)/chevishev.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o chevishev.o `test -f 'transforms/chevishev.cpp' || echo '$(srcdir)/'`transforms/chevishev.cpp

chevishev.obj: transforms/chevishev.cpp
@AMDEP_TRUE@	source='transforms/chevishev.cpp' object='chevishev.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/chevishev.Po' tmpdepfile='$(DEPDIR)/chevishev.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o chevishev.obj `cygpath -w transforms/chevishev.cpp`

radon.o: transforms/radon.cpp
@AMDEP_TRUE@	source='transforms/radon.cpp' object='radon.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/radon.Po' tmpdepfile='$(DEPDIR)/radon.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o radon.o `test -f 'transforms/radon.cpp' || echo '$(srcdir)/'`transforms/radon.cpp

radon.obj: transforms/radon.cpp
@AMDEP_TRUE@	source='transforms/radon.cpp' object='radon.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/radon.Po' tmpdepfile='$(DEPDIR)/radon.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o radon.obj `cygpath -w transforms/radon.cpp`

Common.o: transforms/wavelet/Common.cpp
@AMDEP_TRUE@	source='transforms/wavelet/Common.cpp' object='Common.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Common.Po' tmpdepfile='$(DEPDIR)/Common.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Common.o `test -f 'transforms/wavelet/Common.cpp' || echo '$(srcdir)/'`transforms/wavelet/Common.cpp

Common.obj: transforms/wavelet/Common.cpp
@AMDEP_TRUE@	source='transforms/wavelet/Common.cpp' object='Common.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Common.Po' tmpdepfile='$(DEPDIR)/Common.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Common.obj `cygpath -w transforms/wavelet/Common.cpp`

convolution.o: transforms/wavelet/convolution.cpp
@AMDEP_TRUE@	source='transforms/wavelet/convolution.cpp' object='convolution.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/convolution.Po' tmpdepfile='$(DEPDIR)/convolution.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o convolution.o `test -f 'transforms/wavelet/convolution.cpp' || echo '$(srcdir)/'`transforms/wavelet/convolution.cpp

convolution.obj: transforms/wavelet/convolution.cpp
@AMDEP_TRUE@	source='transforms/wavelet/convolution.cpp' object='convolution.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/convolution.Po' tmpdepfile='$(DEPDIR)/convolution.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o convolution.obj `cygpath -w transforms/wavelet/convolution.cpp`

DataGrid2D.o: transforms/wavelet/DataGrid2D.cpp
@AMDEP_TRUE@	source='transforms/wavelet/DataGrid2D.cpp' object='DataGrid2D.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/DataGrid2D.Po' tmpdepfile='$(DEPDIR)/DataGrid2D.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DataGrid2D.o `test -f 'transforms/wavelet/DataGrid2D.cpp' || echo '$(srcdir)/'`transforms/wavelet/DataGrid2D.cpp

DataGrid2D.obj: transforms/wavelet/DataGrid2D.cpp
@AMDEP_TRUE@	source='transforms/wavelet/DataGrid2D.cpp' object='DataGrid2D.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/DataGrid2D.Po' tmpdepfile='$(DEPDIR)/DataGrid2D.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DataGrid2D.obj `cygpath -w transforms/wavelet/DataGrid2D.cpp`

DataGrid3D.o: transforms/wavelet/DataGrid3D.cpp
@AMDEP_TRUE@	source='transforms/wavelet/DataGrid3D.cpp' object='DataGrid3D.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/DataGrid3D.Po' tmpdepfile='$(DEPDIR)/DataGrid3D.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DataGrid3D.o `test -f 'transforms/wavelet/DataGrid3D.cpp' || echo '$(srcdir)/'`transforms/wavelet/DataGrid3D.cpp

DataGrid3D.obj: transforms/wavelet/DataGrid3D.cpp
@AMDEP_TRUE@	source='transforms/wavelet/DataGrid3D.cpp' object='DataGrid3D.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/DataGrid3D.Po' tmpdepfile='$(DEPDIR)/DataGrid3D.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o DataGrid3D.obj `cygpath -w transforms/wavelet/DataGrid3D.cpp`

Filter.o: transforms/wavelet/Filter.cpp
@AMDEP_TRUE@	source='transforms/wavelet/Filter.cpp' object='Filter.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Filter.Po' tmpdepfile='$(DEPDIR)/Filter.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Filter.o `test -f 'transforms/wavelet/Filter.cpp' || echo '$(srcdir)/'`transforms/wavelet/Filter.cpp

Filter.obj: transforms/wavelet/Filter.cpp
@AMDEP_TRUE@	source='transforms/wavelet/Filter.cpp' object='Filter.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Filter.Po' tmpdepfile='$(DEPDIR)/Filter.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Filter.obj `cygpath -w transforms/wavelet/Filter.cpp`

FilterSet.o: transforms/wavelet/FilterSet.cpp
@AMDEP_TRUE@	source='transforms/wavelet/FilterSet.cpp' object='FilterSet.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/FilterSet.Po' tmpdepfile='$(DEPDIR)/FilterSet.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o FilterSet.o `test -f 'transforms/wavelet/FilterSet.cpp' || echo '$(srcdir)/'`transforms/wavelet/FilterSet.cpp

FilterSet.obj: transforms/wavelet/FilterSet.cpp
@AMDEP_TRUE@	source='transforms/wavelet/FilterSet.cpp' object='FilterSet.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/FilterSet.Po' tmpdepfile='$(DEPDIR)/FilterSet.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o FilterSet.obj `cygpath -w transforms/wavelet/FilterSet.cpp`

Symlet5.o: transforms/wavelet/Symlet5.cpp
@AMDEP_TRUE@	source='transforms/wavelet/Symlet5.cpp' object='Symlet5.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Symlet5.Po' tmpdepfile='$(DEPDIR)/Symlet5.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Symlet5.o `test -f 'transforms/wavelet/Symlet5.cpp' || echo '$(srcdir)/'`transforms/wavelet/Symlet5.cpp

Symlet5.obj: transforms/wavelet/Symlet5.cpp
@AMDEP_TRUE@	source='transforms/wavelet/Symlet5.cpp' object='Symlet5.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Symlet5.Po' tmpdepfile='$(DEPDIR)/Symlet5.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Symlet5.obj `cygpath -w transforms/wavelet/Symlet5.cpp`

Wavelet.o: transforms/wavelet/Wavelet.cpp
@AMDEP_TRUE@	source='transforms/wavelet/Wavelet.cpp' object='Wavelet.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Wavelet.Po' tmpdepfile='$(DEPDIR)/Wavelet.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Wavelet.o `test -f 'transforms/wavelet/Wavelet.cpp' || echo '$(srcdir)/'`transforms/wavelet/Wavelet.cpp

Wavelet.obj: transforms/wavelet/Wavelet.cpp
@AMDEP_TRUE@	source='transforms/wavelet/Wavelet.cpp' object='Wavelet.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/Wavelet.Po' tmpdepfile='$(DEPDIR)/Wavelet.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o Wavelet.obj `cygpath -w transforms/wavelet/Wavelet.cpp`

WaveletHigh.o: transforms/wavelet/WaveletHigh.cpp
@AMDEP_TRUE@	source='transforms/wavelet/WaveletHigh.cpp' object='WaveletHigh.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/WaveletHigh.Po' tmpdepfile='$(DEPDIR)/WaveletHigh.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o WaveletHigh.o `test -f 'transforms/wavelet/WaveletHigh.cpp' || echo '$(srcdir)/'`transforms/wavelet/WaveletHigh.cpp

WaveletHigh.obj: transforms/wavelet/WaveletHigh.cpp
@AMDEP_TRUE@	source='transforms/wavelet/WaveletHigh.cpp' object='WaveletHigh.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/WaveletHigh.Po' tmpdepfile='$(DEPDIR)/WaveletHigh.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o WaveletHigh.obj `cygpath -w transforms/wavelet/WaveletHigh.cpp`

WaveletLow.o: transforms/wavelet/WaveletLow.cpp
@AMDEP_TRUE@	source='transforms/wavelet/WaveletLow.cpp' object='WaveletLow.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/WaveletLow.Po' tmpdepfile='$(DEPDIR)/WaveletLow.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o WaveletLow.o `test -f 'transforms/wavelet/WaveletLow.cpp' || echo '$(srcdir)/'`transforms/wavelet/WaveletLow.cpp

WaveletLow.obj: transforms/wavelet/WaveletLow.cpp
@AMDEP_TRUE@	source='transforms/wavelet/WaveletLow.cpp' object='WaveletLow.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/WaveletLow.Po' tmpdepfile='$(DEPDIR)/WaveletLow.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o WaveletLow.obj `cygpath -w transforms/wavelet/WaveletLow.cpp`

WaveletMedium.o: transforms/wavelet/WaveletMedium.cpp
@AMDEP_TRUE@	source='transforms/wavelet/WaveletMedium.cpp' object='WaveletMedium.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/WaveletMedium.Po' tmpdepfile='$(DEPDIR)/WaveletMedium.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o WaveletMedium.o `test -f 'transforms/wavelet/WaveletMedium.cpp' || echo '$(srcdir)/'`transforms/wavelet/WaveletMedium.cpp

WaveletMedium.obj: transforms/wavelet/WaveletMedium.cpp
@AMDEP_TRUE@	source='transforms/wavelet/WaveletMedium.cpp' object='WaveletMedium.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/WaveletMedium.Po' tmpdepfile='$(DEPDIR)/WaveletMedium.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o WaveletMedium.obj `cygpath -w transforms/wavelet/WaveletMedium.cpp`

wt.o: transforms/wavelet/wt.cpp
@AMDEP_TRUE@	source='transforms/wavelet/wt.cpp' object='wt.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/wt.Po' tmpdepfile='$(DEPDIR)/wt.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wt.o `test -f 'transforms/wavelet/wt.cpp' || echo '$(srcdir)/'`transforms/wavelet/wt.cpp

wt.obj: transforms/wavelet/wt.cpp
@AMDEP_TRUE@	source='transforms/wavelet/wt.cpp' object='wt.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/wt.Po' tmpdepfile='$(DEPDIR)/wt.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o wt.obj `cygpath -w transforms/wavelet/wt.cpp`
CXXDEPMODE = @CXXDEPMODE@
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES) config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = .
distdir = $(PACKAGE)-$(VERSION)

am__remove_distdir = \
  { test ! -d $(distdir) \
    || { find $(distdir) -type d ! -perm -200 -exec chmod u+w {} ';' \
         && rm -fr $(distdir); }; }

GZIP_ENV = --best
distcleancheck_listfiles = find . -type f -print

distdir: $(DISTFILES)
	$(am__remove_distdir)
	mkdir $(distdir)
	@list='$(DISTFILES)'; for file in $$list; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	-find $(distdir) -type d ! -perm -777 -exec chmod a+rwx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(SHELL) $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r $(distdir)
dist-gzip: distdir
	$(AMTAR) chof - $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

dist dist-all: distdir
	$(AMTAR) chof - $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	$(am__remove_distdir)
	GZIP=$(GZIP_ENV) gunzip -c $(distdir).tar.gz | $(AMTAR) xf -
	chmod -R a-w $(distdir); chmod a+w $(distdir)
	mkdir $(distdir)/=build
	mkdir $(distdir)/=inst
	chmod a-w $(distdir)
	dc_install_base=`$(am__cd) $(distdir)/=inst && pwd` \
	  && cd $(distdir)/=build \
	  && ../configure --srcdir=.. --prefix=$$dc_install_base \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && (test `find $$dc_install_base -type f -print | wc -l` -le 1 \
	      || { echo "ERROR: files left after uninstall:" ; \
	           find $$dc_install_base -type f -print ; \
	           exit 1; } >&2 ) \
	  && $(MAKE) $(AM_MAKEFLAGS) dist-gzip \
	  && rm -f $(distdir).tar.gz \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck
	$(am__remove_distdir)
	@echo "$(distdir).tar.gz is ready for distribution" | \
	  sed 'h;s/./=/g;p;x;p;x'
distcleancheck: distclean
	if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
check: check-am
all-am: Makefile $(LIBRARIES) $(PROGRAMS) config.h

installdirs:
	$(mkinstalldirs) $(DESTDIR)$(bindir)

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-noinstLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-hdr distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf autom4te.cache
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

uninstall-am: uninstall-binPROGRAMS uninstall-info-am

.PHONY: GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-noinstLIBRARIES dist dist-all dist-gzip \
	distcheck distclean distclean-compile distclean-depend \
	distclean-generic distclean-hdr distclean-tags distcleancheck \
	distdir dvi dvi-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-exec \
	install-exec-am install-info install-info-am install-man \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic tags uninstall \
	uninstall-am uninstall-binPROGRAMS uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
